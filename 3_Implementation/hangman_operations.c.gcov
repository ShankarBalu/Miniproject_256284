        -:    0:Source:src/hangman_operations.c
        -:    0:Graph:hangman_operations.gcno
        -:    0:Data:hangman_operations.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/**
        -:    2: * @file hangman_operations.c
        -:    3: * @author Shankar Balu 
        -:    4: * @brief  Function definitions for sketching operations
        -:    5: * @version 0.1
        -:    6: * @date 2021-04-13
        -:    7: * 
        -:    8: * @copyright Copyright (c) 2021
        -:    9: * 
        -:   10: */
        -:   11:#include <hangman_operations.h>
        -:   12:#include<stdio.h>
        -:   13:#include<string.h>
        -:   14:
        1:   15:int sketcha()
        -:   16:{
        1:   17:    printf("_______________\n");
        1:   17-block  0
        1:   18:    printf(" |          |  \n");
        1:   19:    printf(" |             \n");
        1:   20:    printf(" |             \n");
        1:   21:    printf(" |             \n");
        1:   22:    printf(" |             \n");
        1:   23:    printf("_|_____________\n");
        1:   24:    return 1;
        -:   25:}
        -:   26:
        1:   27:int sketchb()
        -:   28:{
        1:   29:    printf("_______________\n");
        1:   29-block  0
        1:   30:    printf(" |         |   \n");
        1:   31:    printf(" |         0   \n");
        1:   32:    printf(" |             \n");
        1:   33:    printf(" |             \n");
        1:   34:    printf(" |             \n");
        1:   35:    printf("_|_____________\n");
        1:   36:    return 2;
        -:   37:}
        -:   38:
        1:   39:int sketchc()
        -:   40:{
        1:   41:    printf("_______________\n");
        1:   41-block  0
        1:   42:    printf(" |         |   \n");
        1:   43:    printf(" |         0   \n");
        1:   44:    printf(" |         |   \n");
        1:   45:    printf(" |         |   \n");
        1:   46:    printf(" |             \n");
        1:   47:    printf("_|_____________\n");
        1:   48:    return 3;
        -:   49:}
        -:   50:
        1:   51:int sketchd()
        -:   52:{
        1:   53:    printf("_______________\n");
        1:   53-block  0
        1:   54:    printf(" |         |   \n");
        1:   55:    printf(" |         0   \n");
        1:   56:    printf(" |        /|\\ \n");
        1:   57:    printf(" |         |   \n");
        1:   58:    printf(" |             \n");
        1:   59:    printf("_|_____________\n");
        1:   60:    return 4;
        -:   61:}
        -:   62:
        1:   63:int sketche()
        -:   64:{
        1:   65:    printf("_______________\n");
        1:   65-block  0
        1:   66:    printf(" |         |   \n");
        1:   67:    printf(" |         0   \n");
        1:   68:    printf(" |        /|\\ \n");
        1:   69:    printf(" |         |   \n");
        1:   70:    printf(" |        / \\ \n");
        1:   71:    printf("_|_____________\n");
        1:   72:    return 5;
        -:   73:}
        -:   74:
        3:   75:char* retrieve_word(int n,char* word)
        -:   76:{
        -:   77:    FILE *fptr;
        3:   78:    fptr=fopen("words.txt","r");
        3:   78-block  0
       53:   79:    for(int i=0;i<n;i++)
       53:   79-block  0
        -:   80:    {   
       50:   81:            fgets(word,20,fptr);
       50:   81-block  0
        -:   82:    }
        3:   83:    word[strlen(word)-1]='\0';
        3:   84:    return word;
        3:   84-block  0
        -:   85:}
